<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up()
    {
        Schema::create(config('violations.table_name'), static function (Blueprint $table) {
            $table->id();
            $table->timestamps();
            $connection = DB::connection();
            $driver     = $connection->getDriverName();

            if ($driver === 'mysql') {
                $table
                    ->string('report_type', 16)
                    ->charset('ascii')
                    ->collation('ascii_bin');
            } elseif ($driver === 'sqlite') {
                //Laravel doesn't map this collation correctly, so we need to do it manually
                $table
                    ->string('report_type', 16)
                    ->collation('BINARY');
            }
            //User agent strings can contain random binary data, so need to use a blob, not text
            $table
                ->binary('user_agent')
                ->nullable();
            $table
                ->ipAddress('ip')
                ->nullable();
            $table
                ->boolean('forwarded')
                ->default(false);
            //The entire raw report received from the client is stored in here
            //JSON fields are not supported in SQLite, but they will be emulated as text fields
            $table->json('report');
            //Index these two fields as we want to search for them when we look for unforwarded reports
            $table->index(['report_type', 'forwarded']);
        });
    }

    public function down()
    {
        Schema::dropIfExists(config('violations.table_name'));
    }
};
